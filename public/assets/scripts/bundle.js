function getWeather(){var n="http://api.wunderground.com/api/c67e9d8da41867a4/geolookup/conditions/q/Canada/Toronto.json";$.ajax({url:n,dataType:"jsonp",success:function(n){console.log(n);n.location.city,n.current_observation.temp_c}})}function updateBackground(n,t){$.getJSON("http://ip-api.com/json/?callback=?",function(a){latitude=a.lat,longitude=a.lon;var e=SunCalc2.getDayInfo(t,latitude,longitude,!0),o=e.morningTwilight,s=e.nightTwilight,r=o.astronomical.start.getHours(),i=o.civil.end.getHours(),u=e.transit.getHours(),c=e.sunrise.start.getHours(),d=e.sunrise.end.getHours(),l=s.astronomical.start.getHours(),g=e.sunset.end.getHours(),f=e.dusk.getHours()+2,h=0;n===!0&&(console.log("times dusk "+formatTime(e.dusk,!0)),console.log("sunset start "+formatTime(e.sunset.start,!0)),console.log("sunset "+formatTime(e.sunset.end,!0)),console.log("sunrise "+formatTime(e.sunrise.start,!0)),console.log("sunrise end "+formatTime(e.sunrise.end,!0)),console.log("dawn "+formatTime(e.dawn)),console.log("noon "+formatTime(e.transit,!0)),console.log("dusk "+formatTime(e.dusk,!0)),console.log("sunrise start: "+c),console.log("sunrise end "+d),console.log("night start "+l),console.log("morningStart: "+r),console.log("morning end "+i));var M=$("body"),m=$("#showStars"),v=($("#bgImg"),$("#cloudDiv")),p=t.getHours();u>=p||g>=p?(console.log("Current Time: "+p),$("#main-banner").prepend($("<img>",{id:"bgImg",src:"./assets/images/74wingold-day.png"}))):$("#main-banner").prepend($("<img>",{id:"bgImg",src:"./assets/images74wingold-night.png"})),p>=h&&r>=p&&(M.toggleClass("dawn sunset"),m.addClass("stars"),v.addClass("clouds-night"),v.removeClass("clouds-day")),p>r&&u>p&&(M.toggleClass("sunrise sunset"),v.addClass("clouds-day")),p>=u&&g>p&&(M.toggleClass("day sunset"),v.addClass("clouds-day")),(g>=p||f>p)&&(M.toggleClass("sunset"),v.addClass("clouds-day")),(p>=f||h>=p)&&(M.toggleClass("night"),m.addClass("stars"),v.addClass("clouds-night"),v.removeClass("clouds-day"))})}function displayMoonPhase(n){var t=SunCalc.getMoonIllumination(n),a=t.phase,e=findMoonPhase(a);$(".moonPhase").append(e)}function findMoonPhase(n){var t="";return 0===n?t="New Moon":n>0&&.25>n?t="Waxing Crescent":.25==n?t="First Quarter":n>.25&&.5>n?t="Waxing Gibbous":.5==n?t="Full Moon":n>.5&&.75>n?t="Last Quarter":n>=.75&&1>=n&&(t="Waning Crescent"),t}function formatTime(n,t){if(isNaN(n))return"&nbsp;&nbsp;n/a&nbsp;&nbsp;";var a,e=n.getHours(),o=n.getMinutes();return t?(a=12>e?"am":"pm",0===e&&(e=12),e>12&&(e-=12)):e=10>e?"0"+e:""+e,o=10>o?"0"+o:""+o,e+":"+o+(t?" "+a:"")}$(document).ready(function(){var n=!0,t=new Date;updateBackground(n,t),displayMoonPhase(t)}),SunCalc2=function(){function n(n){return n.valueOf()/E-.5+v}function t(n){return new Date((n+.5-v)*E)}function a(n,t){return Math.round(n-p-y-t/(2*Math.PI))}function e(n,t,a){return p+y+(n+t)/(2*Math.PI)+a}function o(n){return C+T*(n-p)}function s(n){return H*Math.sin(n)+I*Math.sin(2*n)+k*Math.sin(3*n)}function r(n,t){return n+$+t+Math.PI}function i(n,t,a){return n+b*Math.sin(t)+P*Math.sin(2*a)}function u(n){return Math.asin(Math.sin(n)*Math.sin(D))}function c(n){return Math.atan2(Math.sin(n)*Math.cos(D),Math.cos(n))}function d(n,t){return S+N*(n-p)-t}function l(n,t,a,e){var o=n-t;return Math.atan2(Math.sin(o),Math.cos(o)*Math.sin(a)-Math.tan(e)*Math.cos(a))}function g(n,t,a,e){var o=n-t;return Math.asin(Math.sin(a)*Math.sin(e)+Math.cos(a)*Math.cos(e)*Math.cos(o))}function f(n,t,a){return Math.acos((Math.sin(n)-Math.sin(t)*Math.sin(a))/(Math.cos(t)*Math.cos(a)))}function h(n,t,a,o,s){return i(e(n,o,s),t,a)}function M(n,t){return n-(t-n)}function m(n,t,a){var e=o(n),i=s(e),f=r(e,i),h=u(f),M=c(f),m=d(n,t);return{azimuth:l(m,M,a,h),altitude:g(m,M,a,h)}}var v=2440588,p=2451545,w=Math.PI/180,C=357.5291*w,T=.98560028*w,y=9e-4,b=.0053,P=-.0069,H=1.9148*w,I=.02*w,k=3e-4*w,$=102.9372*w,D=23.45*w,S=280.16*w,N=360.9856235*w,j=-.83*w,x=.53*w,O=-6*w,W=-12*w,z=-18*w,E=864e5;return{getDayInfo:function(c,d,l,g){var m=-l*w,v=d*w,p=n(c),C=a(p,m),T=e(0,m,C),y=o(T),b=s(y),P=r(y,b),H=u(P),I=i(T,y,P),k=f(j,v,H),$=f(j+x,v,H),D=h(k,y,P,m,C),S=h($,y,P,m,C),N=M(I,D),E=M(I,S),q=f(O,v,H),B=h(q,y,P,m,C),F=M(I,B),Q={dawn:t(F),sunrise:{start:t(N),end:t(E)},transit:t(I),sunset:{start:t(S),end:t(D)},dusk:t(B)};if(g){var U=f(W,v,H),_=f(z,v,H),G=h(U,y,P,m,C),J=h(_,y,P,m,C),L=M(I,G),A=M(I,J);Q.morningTwilight={astronomical:{start:t(A),end:t(L)},nautical:{start:t(L),end:t(F)},civil:{start:t(F),end:t(N)}},Q.nightTwilight={civil:{start:t(D),end:t(B)},nautical:{start:t(B),end:t(G)},astronomical:{start:t(G),end:t(J)}}}return Q},getSunPosition:function(t,a,e){return m(n(t),-e*w,a*w)}}}(),function(){"use strict";function n(n){return n.valueOf()/I-.5+k}function t(n){return new Date((n+.5-k)*I)}function a(t){return n(t)-$}function e(n,t){return b(w(n)*C(D)-T(t)*w(D),C(n))}function o(n,t){return y(w(t)*C(D)+C(t)*w(D)*w(n))}function s(n,t,a){return b(w(n),C(n)*w(t)-T(a)*C(t))}function r(n,t,a){return y(w(t)*w(a)+C(t)*C(a)*C(n))}function i(n,t){return H*(280.16+360.9856235*n)-t}function u(n){return H*(357.5291+.98560028*n)}function c(n){var t=H*(1.9148*w(n)+.02*w(2*n)+3e-4*w(3*n)),a=102.9372*H;return n+t+a+p}function d(n){var t=u(n),a=c(t);return{dec:o(a,0),ra:e(a,0)}}function l(n,t){return Math.round(n-j-t/(2*p))}function g(n,t,a){return j+(n+t)/(2*p)+a}function f(n,t,a){return $+n+.0053*w(t)-.0069*w(2*a)}function h(n,t,a){return P((w(n)-w(t)*w(a))/(C(t)*C(a)))}function M(n,t,a,e,o,s,r){var i=h(n,a,e),u=g(i,t,o);return f(u,s,r)}function m(n){var t=H*(218.316+13.176396*n),a=H*(134.963+13.064993*n),s=H*(93.272+13.22935*n),r=t+6.289*H*w(a),i=5.128*H*w(s),u=385001-20905*C(a);return{ra:e(r,i),dec:o(r,i),dist:u}}function v(n,t){return new Date(n.valueOf()+t*I/24)}var p=Math.PI,w=Math.sin,C=Math.cos,T=Math.tan,y=Math.asin,b=Math.atan2,P=Math.acos,H=p/180,I=864e5,k=2440588,$=2451545,D=23.4397*H,S={};S.getPosition=function(n,t,e){var o=H*-e,u=H*t,c=a(n),l=d(c),g=i(c,o)-l.ra;return{azimuth:s(g,u,l.dec),altitude:r(g,u,l.dec)}};var N=S.times=[[-.833,"sunrise","sunset"],[-.3,"sunriseEnd","sunsetStart"],[-6,"dawn","dusk"],[-12,"nauticalDawn","nauticalDusk"],[-18,"nightEnd","night"],[6,"goldenHourEnd","goldenHour"]];S.addTime=function(n,t,a){N.push([n,t,a])};var j=9e-4;S.getTimes=function(n,e,s){var r,i,d,h,m,v=H*-s,p=H*e,w=a(n),C=l(w,v),T=g(0,v,C),y=u(T),b=c(y),P=o(b,0),I=f(T,y,b),k={solarNoon:t(I),nadir:t(I-.5)};for(r=0,i=N.length;i>r;r+=1)d=N[r],h=M(d[0]*H,v,p,P,C,y,b),m=I-(h-I),k[d[1]]=t(m),k[d[2]]=t(h);return k},S.getMoonPosition=function(n,t,e){var o=H*-e,u=H*t,c=a(n),d=m(c),l=i(c,o)-d.ra,g=r(l,u,d.dec);return g+=.017*H/T(g+10.26*H/(g+5.1*H)),{azimuth:s(l,u,d.dec),altitude:g,distance:d.dist}},S.getMoonIllumination=function(n){var t=a(n),e=d(t),o=m(t),s=149598e3,r=P(w(e.dec)*w(o.dec)+C(e.dec)*C(o.dec)*C(e.ra-o.ra)),i=b(s*w(r),o.dist-s*C(r)),u=b(C(e.dec)*w(e.ra-o.ra),w(e.dec)*C(o.dec)-C(e.dec)*w(o.dec)*C(e.ra-o.ra));return{fraction:(1+C(i))/2,phase:.5+.5*i*(0>u?-1:1)/Math.PI,angle:u}},S.getMoonTimes=function(n,t,a,e){var o=new Date(n);e?o.setUTCHours(0,0,0,0):o.setHours(0,0,0,0);for(var s,r,i,u,c,d,l,g,f,h,M,m,p,w=.133*H,C=S.getMoonPosition(o,t,a).altitude-w,T=1;24>=T&&(s=S.getMoonPosition(v(o,T),t,a).altitude-w,r=S.getMoonPosition(v(o,T+1),t,a).altitude-w,c=(C+r)/2-s,d=(r-C)/2,l=-d/(2*c),g=(c*l+d)*l+s,f=d*d-4*c*s,h=0,f>=0&&(p=Math.sqrt(f)/(2*Math.abs(c)),M=l-p,m=l+p,Math.abs(M)<=1&&h++,Math.abs(m)<=1&&h++,-1>M&&(M=m)),1===h?0>C?i=T+M:u=T+M:2===h&&(i=T+(0>g?m:M),u=T+(0>g?M:m)),!i||!u);T+=2)C=r;var y={};return i&&(y.rise=v(o,i)),u&&(y.set=v(o,u)),i||u||(y[g>0?"alwaysUp":"alwaysDown"]=!0),y},"function"==typeof define&&define.amd?define(S):"undefined"!=typeof module?module.exports=S:window.SunCalc=S}();
//# sourceMappingURL=data:application/json;base64,
